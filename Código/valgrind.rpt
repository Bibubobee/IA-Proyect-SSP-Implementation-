==11007== Memcheck, a memory error detector
==11007== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11007== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==11007== Command: ./a.out
==11007== Parent PID: 350
==11007== 
==11007== Invalid read of size 8
==11007==    at 0x114660: std::vector<int, std::allocator<int> >::operator[](unsigned long) (in /mnt/d/Users/gaboe/Documents/USM/Ramos/8vo semestre/INF295 (IA)/Proyecto/01.5 - Avance/Proyecto-IA/Código/a.out)
==11007==    by 0x111487: tabu_search(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >&, std::vector<std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >, std::allocator<std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > > > >&) (in /mnt/d/Users/gaboe/Documents/USM/Ramos/8vo semestre/INF295 (IA)/Proyecto/01.5 - Avance/Proyecto-IA/Código/a.out)
==11007==    by 0x1120EA: main (in /mnt/d/Users/gaboe/Documents/USM/Ramos/8vo semestre/INF295 (IA)/Proyecto/01.5 - Avance/Proyecto-IA/Código/a.out)
==11007==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==11007== 
==11007== 
==11007== Process terminating with default action of signal 11 (SIGSEGV)
==11007==  Access not within mapped region at address 0x0
==11007==    at 0x114660: std::vector<int, std::allocator<int> >::operator[](unsigned long) (in /mnt/d/Users/gaboe/Documents/USM/Ramos/8vo semestre/INF295 (IA)/Proyecto/01.5 - Avance/Proyecto-IA/Código/a.out)
==11007==    by 0x111487: tabu_search(std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >&, std::vector<std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > >, std::allocator<std::vector<std::vector<bool, std::allocator<bool> >, std::allocator<std::vector<bool, std::allocator<bool> > > > > >&) (in /mnt/d/Users/gaboe/Documents/USM/Ramos/8vo semestre/INF295 (IA)/Proyecto/01.5 - Avance/Proyecto-IA/Código/a.out)
==11007==    by 0x1120EA: main (in /mnt/d/Users/gaboe/Documents/USM/Ramos/8vo semestre/INF295 (IA)/Proyecto/01.5 - Avance/Proyecto-IA/Código/a.out)
==11007==  If you believe this happened as a result of a stack
==11007==  overflow in your program's main thread (unlikely but
==11007==  possible), you can try to increase the size of the
==11007==  main thread stack using the --main-stacksize= flag.
==11007==  The main thread stack size used in this run was 8388608.
==11007== 
==11007== HEAP SUMMARY:
==11007==     in use at exit: 22,276 bytes in 515 blocks
==11007==   total heap usage: 8,381 allocs, 7,866 frees, 426,262 bytes allocated
==11007== 
==11007== LEAK SUMMARY:
==11007==    definitely lost: 0 bytes in 0 blocks
==11007==    indirectly lost: 0 bytes in 0 blocks
==11007==      possibly lost: 0 bytes in 0 blocks
==11007==    still reachable: 22,276 bytes in 515 blocks
==11007==         suppressed: 0 bytes in 0 blocks
==11007== Reachable blocks (those to which a pointer was found) are not shown.
==11007== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==11007== 
==11007== For lists of detected and suppressed errors, rerun with: -s
==11007== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
